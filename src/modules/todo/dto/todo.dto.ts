import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import _ from 'lodash';

import { AbstractDto } from '../../../common/dto/abstract.dto';
import { RecurringType } from '../../../constants/recurring-type';
import { WeekDayType } from '../../../modules/event/types/event.type';
import type { TodoEntity } from '../entities/todo.entity';
import { TodoType } from '../types/todo.type';

export class TodoDto extends AbstractDto {
  @ApiProperty({ enum: TodoType })
  type: TodoType;

  @ApiProperty()
  text: string;

  @ApiProperty()
  isDone: boolean;

  @ApiPropertyOptional()
  assigneeIds: Uuid[];

  @ApiPropertyOptional()
  assigneeId?: Uuid;

  @ApiProperty()
  dueDate?: Date;

  @ApiPropertyOptional()
  award: number;

  @ApiPropertyOptional()
  isAutoGenerated: boolean;

  @ApiPropertyOptional()
  categoryId: Uuid;

  @ApiProperty()
  byGpt: boolean;

  @ApiProperty()
  isRecurring: boolean;

  @ApiProperty({ enum: RecurringType })
  recurringType?: RecurringType;

  @ApiProperty()
  untilDateTime?: Date;

  @ApiProperty({ enum: WeekDayType, isArray: true })
  byWeekDay?: WeekDayType[];

  @ApiProperty()
  rrule?: string;

  constructor(todo: TodoEntity) {
    super(todo);
    this.type = todo.type;
    this.text = todo.text;
    this.isDone = todo.isDone;
    this.assigneeIds = _.map(todo.assignees, (assignee) => assignee.id);
    this.assigneeId = _.first(this.assigneeIds);
    this.dueDate = todo.dueDate;
    this.award = todo.award;
    this.isAutoGenerated = todo.isAutoGenerated;
    this.categoryId = todo.categoryId;
    this.byGpt = todo.byGpt;
    this.isRecurring = todo.isRecurring;
    this.recurringType = todo.recurringType;
    this.untilDateTime = todo.untilDateTime;
    this.byWeekDay = todo.byWeekDay;
    this.rrule = todo.rrule;
  }
}
