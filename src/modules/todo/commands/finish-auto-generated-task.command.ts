import type { ICommand, ICommandHandler } from '@nestjs/cqrs';
import { CommandHandler } from '@nestjs/cqrs';

import { TodoService } from '../todo.service';
import type { ActionPlanType } from '../types/action-plan.type';

export class FinishAutoGeneratedTaskCommand implements ICommand {
  constructor(
    public readonly familyId: Uuid,
    public readonly actionPlan: ActionPlanType,
  ) {}
}

@CommandHandler(FinishAutoGeneratedTaskCommand)
export class FinishAutoGeneratedTaskHandler
  implements ICommandHandler<FinishAutoGeneratedTaskCommand, void>
{
  constructor(private readonly todoService: TodoService) {}

  async execute(command: FinishAutoGeneratedTaskCommand): Promise<void> {
    await this.todoService.finishAutoGeneratedTask(
      command.familyId,
      command.actionPlan,
    );
  }
}
