- name: Deploy Backend
  hosts: all
  remote_user: "{{ lookup('env', 'SSH_USERNAME') }}"
  vars:
    ansible_password: "{{ lookup('env', 'SSH_PASSWORD') }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    SSH_USERNAME: "{{ lookup('env', 'SSH_USERNAME') }}"
    REPO: "{{ lookup('env', 'REPO') }}"
    REPO_NAME: "{{ lookup('env', 'REPO_NAME') }}"
    BRANCH_NAME: "{{ lookup('env', 'BRANCH_NAME') }}"
    IMAGE_TAG: "{{ lookup('env', 'IMAGE_TAG') }}"
  gather_facts: true
  tasks:
  - name: "Backup ssh config file"
    shell: "mv config config.bk"
    args:
      chdir: /home/{{ SSH_USERNAME }}/.ssh/
  - name: "Copy ssh config"
    shell: "cp {{ REPO_NAME }}.config config"
    args:
      chdir: /home/{{ SSH_USERNAME }}/.ssh/
  - name: "Remove old source code"
    shell: "rm -rf {{ REPO_NAME }}/"
  - name: "Clone Source code"
    shell: "git clone git@github.com:{{ REPO }}.git"
  - name: Modify ECR env
    shell: echo "ECR_IMAGE_NAME={{ REPO_NAME }}:{{ IMAGE_TAG }}" >> ~/{{ REPO_NAME }}.env
  - name: "Copy env file"
    shell: "cp ~/{{ REPO_NAME }}.env /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/.env"
  - name: "Checkout branch"
    shell: "git checkout {{ BRANCH_NAME }}"
    args:
      chdir: /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/
  - name: "Create docker image"
    shell: "docker build -t {{ REPO_NAME }}:{{ IMAGE_TAG }} ."
    args:
      chdir: /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/
  - name: "Deploy apps"
    shell: "docker compose up -d --no-deps app"
    args:
      chdir: /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/
  - name: "Recover ssh config"
    shell: "cp config.bk config"
    args:
      chdir: /home/{{ SSH_USERNAME }}/.ssh/
