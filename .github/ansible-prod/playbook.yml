- name: Deploy Backend
  hosts: all
  remote_user: ec2-user
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    SSH_USERNAME: "{{ lookup('env', 'SSH_USERNAME') }}"
    REPO: "{{ lookup('env', 'REPO') }}"
    REPO_NAME: "{{ lookup('env', 'REPO_NAME') }}"
    BRANCH_NAME: "{{ lookup('env', 'BRANCH_NAME') }}"
    AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
    AWS_ACCOUNT_ID: "{{ lookup('env', 'AWS_ACCOUNT_ID') }}"
    ECR_REPOSITORY_NAME: "{{ lookup('env', 'ECR_REPOSITORY_NAME') }}"
    IMAGE_TAG: "{{ lookup('env', 'IMAGE_TAG') }}"
  gather_facts: true
  tasks:
  - name: Login to ECR
    shell: aws ecr get-login-password --region {{ AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin {{ AWS_ACCOUNT_ID }}.dkr.ecr.{{ AWS_DEFAULT_REGION }}.amazonaws.com
  - name: "Pull image from ECR"
    shell: docker pull {{ AWS_ACCOUNT_ID }}.dkr.ecr.{{ AWS_DEFAULT_REGION }}.amazonaws.com/{{ ECR_REPOSITORY_NAME }}:{{ IMAGE_TAG }}
    args:
      chdir: /home/{{ SSH_USERNAME }}/
  - name: Modify ECR env
    shell: sed -i "s|^ECR_IMAGE_NAME=.*|ECR_IMAGE_NAME={{ AWS_ACCOUNT_ID }}.dkr.ecr.{{ AWS_DEFAULT_REGION }}.amazonaws.com/{{ ECR_REPOSITORY_NAME }}:{{ IMAGE_TAG }}|" ~/{{ REPO_NAME }}.env
  - name: "Remove old source code"
    shell: "rm -rf {{ REPO_NAME }}/"
    args:
      chdir: /home/{{ SSH_USERNAME }}/
  - name: "Clone Source code"
    shell: "git clone git@github.com:{{ REPO }}.git"
    args:
      chdir: /home/{{ SSH_USERNAME }}/
  - name: Checkout branch
    shell: git checkout {{ BRANCH_NAME }}
    args:
      chdir: /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/
  - name: "Copy env file"
    shell: "cp {{ REPO_NAME }}.env /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/.env"
    args:
      chdir: /home/{{ SSH_USERNAME }}/
  - name: "Deploy apps"
    shell: "docker-compose up -d --no-deps app"
    args:
      chdir: /home/{{ SSH_USERNAME }}/{{ REPO_NAME }}/
